construct_whenSubscribed	rx/operators.html#construct_whenSubscribed.t,untyped	operators: construct_whenSubscribed[T](mkObservable: untyped): untyped	
just	rx/operators.html#just,T	operators: just[T](v: T): Observable[T]	
range	rx/operators.html#range,T,Natural	operators: range[T: Ordinal](start: T; count: Natural): Observable[T]	
repeat	rx/operators.html#repeat,Observable[T],Natural	operators: repeat[T](upstream: Observable[T]; times: Natural = 0): Observable[T]	
buffer	rx/operators.html#buffer,Observable[T],Natural,Natural	operators: buffer[T](upstream: Observable[T]; timeSpan: Natural; skip: Natural = 0): Observable[\n    seq[T]]	
map	rx/operators.html#map,Observable[T],	operators: map[T, S](upstream: Observable[T]; op: (T) -&gt; S): Observable[S]	
filter	rx/operators.html#filter,Observable[T],	operators: filter[T](upstream: Observable[T]; op: (T) -&gt; bool): Observable[T]	
zip	rx/operators.html#zip,Observable[Tl],Observable[Tr]	operators: zip[Tl, Tr](tl: Observable[Tl]; tr: Observable[Tr]): Observable[(Tl, Tr)]	
zip	rx/operators.html#zip,Observable[T],varargs[Observable[T]]	operators: zip[T](upstream: Observable[T]; targets: varargs[Observable[T]]): Observable[\n    seq[T]]	
retry	rx/operators.html#retry,Observable[T]	operators: retry[T](upstream: Observable[T]): Observable[T]	
concat	rx/operators.html#concat,Observable[T],varargs[Observable[T]]	operators: concat[T](upstream: Observable[T]; targets: varargs[Observable[T]]): Observable[\n    T]	
toObservable	rx/operators.html#toObservable.c,ConnectableObservable[T]	operators: toObservable[T](self: ConnectableObservable[T]): Observable[T]	
`&lt;&gt;`	rx/operators.html#<>.t,ConnectableObservable[T]	operators: `&lt;&gt;`[T](self: ConnectableObservable[T]): Observable[T]	
publish	rx/operators.html#publish,Observable[T]	operators: publish[T](upstream: Observable[T]): ConnectableObservable[T]	
connect	rx/operators.html#connect,ConnectableObservable[T]	operators: connect[T](self: ConnectableObservable[T]): Disposable	
refCount	rx/operators.html#refCount,ConnectableObservable[T]	operators: refCount[T](upstream: ConnectableObservable[T]): Observable[T]	
share	rx/operators.html#share,Observable[T]	operators: share[T](upstream: Observable[T]): Observable[T]	
doThat	rx/operators.html#doThat,Observable[T],	operators: doThat[T](upstream: Observable[T]; op: (T) -&gt; void): Observable[T]	
dump	rx/operators.html#dump,Observable[T]	operators: dump[T](upstream: Observable[T]): Observable[T]	
