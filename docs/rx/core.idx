Observer	rx/core.html#Observer	core: Observer	
Observable	rx/core.html#Observable	core: Observable	
Disposable	rx/core.html#Disposable	core: Disposable	
toDisposable	rx/core.html#toDisposable.c,Subscription[T]	core: toDisposable[T](subscription: Subscription[T]): Disposable	
newSubscription	rx/core.html#newSubscription,Observable[T],Observer[T]	core: newSubscription[T](oble: Observable[T]; ober: Observer[T]): Subscription[T]	
newObserver	rx/core.html#newObserver,proc(T),proc(ref.Exception),proc)	core: newObserver[T](onNext: proc (v: T); onError: proc (e: ref Exception) = nil;\n               onComplete: proc () = nil): Observer[T]	
newObservable	rx/core.html#newObservable	core: newObservable[T](onSubscribe: (Observer[T]) -&gt; Disposable): Observable[T]	
subscribe	rx/core.html#subscribe,Observable[T],Observer[T]	core: subscribe[T](self: Observable[T]; observer: Observer[T]): Disposable	
subscribe	rx/core.html#subscribe.t,Observable[T],proc(T),proc(ref.Exception),proc)	core: subscribe[T](self: Observable[T]; onNext: proc (v: T);\n             onError: proc (e: ref Exception) = nil; onComplete: proc () = nil): Disposable	
